name: CI Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.8', '3.9', '3.10', '3.11']
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Cache pip packages
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pytest pytest-cov flake8 mypy black isort bandit[toml]
    
    - name: Format check with Black
      run: |
        black --check --diff src tests
    
    - name: Import sort check with isort
      run: |
        isort --check-only --diff src tests
    
    - name: Lint with flake8
      run: |
        # Stop build if there are Python syntax errors or undefined names
        flake8 src --count --select=E9,F63,F7,F82 --show-source --statistics
        # Exit-zero treats all errors as warnings
        flake8 src --count --exit-zero --max-complexity=10 --max-line-length=100 --statistics
    
    - name: Security check with bandit
      run: |
        bandit -r src -ll
    
    - name: Type check with mypy
      run: |
        mypy src --strict
    
    - name: Test with pytest (unit tests)
      run: |
        pytest tests/unit -v --cov=src --cov-report=xml --cov-report=term-missing
    
    - name: Test with pytest (integration tests)
      run: |
        pytest tests/integration -v --cov=src --cov-append --cov-report=xml --cov-report=term-missing
    
    - name: Run performance benchmarks
      run: |
        python -m pytest tests/benchmarks -v --benchmark-only --benchmark-json=benchmark.json || echo "No benchmarks found, skipping..."
    
    - name: Build documentation
      run: |
        pip install sphinx sphinx-rtd-theme
        cd docs && sphinx-build -b html . _build/html || echo "Documentation build not configured, skipping..."
    
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
        flags: unittests,integrationtests
        name: codecov-umbrella
        fail_ci_if_error: false

  build:
    runs-on: ubuntu-latest
    needs: test
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: Install build tools
      run: |
        python -m pip install --upgrade pip
        pip install build wheel
    
    - name: Build distribution
      run: |
        python -m build
    
    - name: Check distribution
      run: |
        pip install twine
        twine check dist/*
    
    - name: Upload artifacts
      uses: actions/upload-artifact@v3
      with:
        name: dist
        path: dist/